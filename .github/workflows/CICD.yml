name: Industrialisation continue sur le serveur Alwaysdata
on: push
jobs:
  Connexion:
    runs-on: ubuntu-latest
    steps:
      - name: Connexion SSH avec le serveur
        uses: appleboy/ssh-action@master
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd $HOME/www/
  Copy:
    needs: Connexion
    runs-on: ubuntu-latest
    steps:
      - name: Connexion SSH avec le serveur
        uses: appleboy/ssh-action@master
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            # Cloner dans un dossier temporaire unique
            temp_dir=$(basename ${{ runner.workspace }})
            cd $HOME/www
            # git clone https://github.com/sizanic/flask_AD.git
            git clone https://github.com/${{ github.repository }}.git $temp_dir
            # Vérifier si le répertoire de destination existe
            if [ -d "flask_AD" ]; then
              rsync -a --delete "$tmp_dir/" "flask_AD/"
              rm -rf "$tmp_dir"
              echo "✅ Code mis à jour dans flask_AD"
            else
              echo "❌ Le répertoire flask_AD n'existe pas"
              rm -rf "$tmp_dir"
              exit 1
            fi
  Restart:
    needs: Copy
    runs-on: ubuntu-latest
    steps:
      - name: Restart Alwaysdata site
        run: |
          response_code=$(curl -s -o /dev/null -w "%{http_code}" -X POST --basic --user "${{ secrets.ALWAYSDATA_TOKEN }}:" https://api.alwaysdata.com/v1/site/${{ secrets.ALWAYSDATA_SITE_ID }}/restart/)
          # Vérifier le code de réponse HTTP
          if [ "$response_code" -eq 204 ]; then
            echo "Relance de votre site réussi"
          elif [ "$response_code" -eq 404 ]; then
            echo "Vous n'avez pas renseigner correctement votre secret ALWAYSDATA_SITE_ID"
            exit 1  # Quitter avec un code d'erreur
          elif [ "$response_code" -eq 401 ]; then
            echo "Vous n'avez pas renseigner correctement votre secret ALWAYSDATA_TOKEN"
          exit 1  # Quitter avec un code d'erreur
          else
            echo "Échec du redémarrage avec le code de réponse : $response_code"
            exit 1  # Quitter avec un code d'erreur
          fi
